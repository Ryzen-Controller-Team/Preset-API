version: '3.4'

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
      - ${PHP_IMAGE:-quay.io/api-platform/php}

services:
  php:
    build:
      context: ./api
      target: api_platform_php
      <<: *api-cache-from
    image: ${PHP_IMAGE:-quay.io/api-platform/php}
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - db
    volumes:
      - ./api:/srv/api
      - ./api/docker/php/conf.d/api-platform.dev.ini/:/usr/local/etc/php/conf.d/api-platform.ini

  api:
    build:
      context: ./api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:-quay.io/api-platform/nginx}
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ryzencontroller-app-http.entrypoints=http"
      - "traefik.http.routers.ryzencontroller-app-http.rule=Host(`api.ryzencontroller.localhost`, `reverseproxy`)"
      - "traefik.http.routers.ryzencontroller-app-https.entrypoints=https"
      - "traefik.http.routers.ryzencontroller-app-https.rule=Host(`api.ryzencontroller.localhost`)"
      - "traefik.http.routers.ryzencontroller-app-https.tls=true"

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=api-platform
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    labels:
      - "traefik.enable=false"
    ports:
      - target: 5432
        published: 5432
        protocol: tcp

  yarn:
    image: node:13-alpine
    volumes:
      - ./api:/app
    working_dir: /app
    entrypoint: /usr/local/bin/yarn

  admin:
    build:
      context: ./admin
      target: api_platform_admin_development
      cache_from:
        - ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    image: ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    volumes:
      - ./admin:/usr/src/admin
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ryzencontroller-admin.loadbalancer.server.port=3000"
      - "traefik.http.routers.ryzencontroller-admin-http.entrypoints=http"
      - "traefik.http.routers.ryzencontroller-admin-http.rule=Host(`admin.ryzencontroller.localhost`)"
      - "traefik.http.routers.ryzencontroller-admin-https.tls=true"
      - "traefik.http.routers.ryzencontroller-admin-https.entrypoints=https"
      - "traefik.http.routers.ryzencontroller-admin-https.rule=Host(`admin.ryzencontroller.localhost`)"

  reverseproxy:
    image: traefik:v2.0
    volumes:
      - ./docker/traefik/certs/:/etc/certs/
      - ./docker/traefik/conf/:/etc/traefik/
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
      - 8080:8080 # Traefik Web-UI

volumes:
  db-data: {}
